"use strict";
/*
 * Copyright 2020 Evernote Corporation. All rights reserved.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __exportStar = (this && this.__exportStar) || function(m, exports) {
    for (var p in m) if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.PINNED_CONTENTS_FIELD_NAME = exports.convertPinnedContentFromService = exports.UserConverter = exports.convertUserFromService = exports.ThreadConverter = exports.TagConverter = exports.ShortcutConverter = exports.SavedSearchConverter = exports.ResourceConverter = exports.isSearchTextAllowed = exports.generateResourceUrl = exports.fetchAndCacheAttachmentData = exports.PromotionConverter = exports.profileFromUserProfile = exports.profileFromContact = exports.ProfileConverter = exports.NoteConverter = exports.getNoteShareUrl = exports.fetchAndCacheNoteContentData = exports.updatePendingOfflineNoteSyncState = exports.updateOfflineNbsInLocalSettings = exports.updateContentDownloadForNote = exports.resetOfflineNbsSyncStateOnInit = exports.OfflineEntityDownloadState = exports.notebookObjectFromService = exports.NotebookConverter = exports.initPendingOfflineNoteSyncStates = exports.getPendingOfflineNoteIDs = exports.getPendingOfflineNote = exports.getOfflineNbsFromLocalSettings = exports.deletePendingOfflineNoteSyncState = exports.deletePendingOfflineNotebookSyncState = exports.MessageConverter = exports.addNewShare = exports.addNewIdentity = exports.membershipFromWorkspace = exports.MaestroPropsConverter = exports.processLinkedNotebooksForPartialNotebooks = exports.getExpungedLinkedNotebooks = exports.expungeLinkedNotebooksOnService = exports.acceptSharedNotebook = exports.acceptSharedNote = exports.makeConverterParams = exports.convertGuidToService = exports.convertGuidFromService = exports.updateBlobToGraph = exports.BetaFeatureConverter = exports.updateNodeTypeCount = exports.updateAccountLimitsNode = exports.initAccountLimitsNode = void 0;
exports.ThriftStagedBlobManager = exports.updateThriftBackoffManager = exports.ThriftRemoteMutationExecutor = exports.generateCustomID = exports.ThriftComm = exports.AsyncUtilityStore = exports.AsyncUserStore = exports.AsyncNoteStore = exports.AsyncMessageStore = exports.AsyncMaestroService = exports.AsyncCommunicationEngine = exports.toUserClientInfo = exports.workspaceFromService = exports.WorkspaceConverter = void 0;
__exportStar(require("./Auth"), exports);
var AccountLimitsConverter_1 = require("./Converters/AccountLimitsConverter");
Object.defineProperty(exports, "initAccountLimitsNode", { enumerable: true, get: function () { return AccountLimitsConverter_1.initAccountLimitsNode; } });
Object.defineProperty(exports, "updateAccountLimitsNode", { enumerable: true, get: function () { return AccountLimitsConverter_1.updateAccountLimitsNode; } });
Object.defineProperty(exports, "updateNodeTypeCount", { enumerable: true, get: function () { return AccountLimitsConverter_1.updateNodeTypeCount; } });
var BetaFeatureConverter_1 = require("./Converters/BetaFeatureConverter");
Object.defineProperty(exports, "BetaFeatureConverter", { enumerable: true, get: function () { return BetaFeatureConverter_1.BetaFeatureConverter; } });
var BlobConverter_1 = require("./Converters/BlobConverter");
Object.defineProperty(exports, "updateBlobToGraph", { enumerable: true, get: function () { return BlobConverter_1.updateBlobToGraph; } });
var Converters_1 = require("./Converters/Converters");
Object.defineProperty(exports, "convertGuidFromService", { enumerable: true, get: function () { return Converters_1.convertGuidFromService; } });
Object.defineProperty(exports, "convertGuidToService", { enumerable: true, get: function () { return Converters_1.convertGuidToService; } });
var Helpers_1 = require("./Converters/Helpers");
Object.defineProperty(exports, "makeConverterParams", { enumerable: true, get: function () { return Helpers_1.makeConverterParams; } });
var InvitationConverter_1 = require("./Converters/InvitationConverter");
Object.defineProperty(exports, "acceptSharedNote", { enumerable: true, get: function () { return InvitationConverter_1.acceptSharedNote; } });
Object.defineProperty(exports, "acceptSharedNotebook", { enumerable: true, get: function () { return InvitationConverter_1.acceptSharedNotebook; } });
var LinkedNotebookHelpers_1 = require("./Converters/LinkedNotebookHelpers");
Object.defineProperty(exports, "expungeLinkedNotebooksOnService", { enumerable: true, get: function () { return LinkedNotebookHelpers_1.expungeLinkedNotebooksOnService; } });
Object.defineProperty(exports, "getExpungedLinkedNotebooks", { enumerable: true, get: function () { return LinkedNotebookHelpers_1.getExpungedLinkedNotebooks; } });
Object.defineProperty(exports, "processLinkedNotebooksForPartialNotebooks", { enumerable: true, get: function () { return LinkedNotebookHelpers_1.processLinkedNotebooksForPartialNotebooks; } });
var MaestroPropsConverter_1 = require("./Converters/MaestroPropsConverter");
Object.defineProperty(exports, "MaestroPropsConverter", { enumerable: true, get: function () { return MaestroPropsConverter_1.MaestroPropsConverter; } });
var MembershipConverter_1 = require("./Converters/MembershipConverter");
Object.defineProperty(exports, "membershipFromWorkspace", { enumerable: true, get: function () { return MembershipConverter_1.membershipFromWorkspace; } });
var MessageAttachmentConverter_1 = require("./Converters/MessageAttachmentConverter");
Object.defineProperty(exports, "addNewIdentity", { enumerable: true, get: function () { return MessageAttachmentConverter_1.addNewIdentity; } });
Object.defineProperty(exports, "addNewShare", { enumerable: true, get: function () { return MessageAttachmentConverter_1.addNewShare; } });
var MessageConverter_1 = require("./Converters/MessageConverter");
Object.defineProperty(exports, "MessageConverter", { enumerable: true, get: function () { return MessageConverter_1.MessageConverter; } });
var NotebookConverter_1 = require("./Converters/NotebookConverter");
Object.defineProperty(exports, "deletePendingOfflineNotebookSyncState", { enumerable: true, get: function () { return NotebookConverter_1.deletePendingOfflineNotebookSyncState; } });
Object.defineProperty(exports, "deletePendingOfflineNoteSyncState", { enumerable: true, get: function () { return NotebookConverter_1.deletePendingOfflineNoteSyncState; } });
Object.defineProperty(exports, "getOfflineNbsFromLocalSettings", { enumerable: true, get: function () { return NotebookConverter_1.getOfflineNbsFromLocalSettings; } });
Object.defineProperty(exports, "getPendingOfflineNote", { enumerable: true, get: function () { return NotebookConverter_1.getPendingOfflineNote; } });
Object.defineProperty(exports, "getPendingOfflineNoteIDs", { enumerable: true, get: function () { return NotebookConverter_1.getPendingOfflineNoteIDs; } });
Object.defineProperty(exports, "initPendingOfflineNoteSyncStates", { enumerable: true, get: function () { return NotebookConverter_1.initPendingOfflineNoteSyncStates; } });
Object.defineProperty(exports, "NotebookConverter", { enumerable: true, get: function () { return NotebookConverter_1.NotebookConverter; } });
Object.defineProperty(exports, "notebookObjectFromService", { enumerable: true, get: function () { return NotebookConverter_1.notebookObjectFromService; } });
Object.defineProperty(exports, "OfflineEntityDownloadState", { enumerable: true, get: function () { return NotebookConverter_1.OfflineEntityDownloadState; } });
Object.defineProperty(exports, "resetOfflineNbsSyncStateOnInit", { enumerable: true, get: function () { return NotebookConverter_1.resetOfflineNbsSyncStateOnInit; } });
Object.defineProperty(exports, "updateContentDownloadForNote", { enumerable: true, get: function () { return NotebookConverter_1.updateContentDownloadForNote; } });
Object.defineProperty(exports, "updateOfflineNbsInLocalSettings", { enumerable: true, get: function () { return NotebookConverter_1.updateOfflineNbsInLocalSettings; } });
Object.defineProperty(exports, "updatePendingOfflineNoteSyncState", { enumerable: true, get: function () { return NotebookConverter_1.updatePendingOfflineNoteSyncState; } });
var NoteConverter_1 = require("./Converters/NoteConverter");
Object.defineProperty(exports, "fetchAndCacheNoteContentData", { enumerable: true, get: function () { return NoteConverter_1.fetchAndCacheNoteContentData; } });
Object.defineProperty(exports, "getNoteShareUrl", { enumerable: true, get: function () { return NoteConverter_1.getNoteShareUrl; } });
Object.defineProperty(exports, "NoteConverter", { enumerable: true, get: function () { return NoteConverter_1.NoteConverter; } });
var ProfileConverter_1 = require("./Converters/ProfileConverter");
Object.defineProperty(exports, "ProfileConverter", { enumerable: true, get: function () { return ProfileConverter_1.ProfileConverter; } });
Object.defineProperty(exports, "profileFromContact", { enumerable: true, get: function () { return ProfileConverter_1.profileFromContact; } });
Object.defineProperty(exports, "profileFromUserProfile", { enumerable: true, get: function () { return ProfileConverter_1.profileFromUserProfile; } });
var PromotionConverter_1 = require("./Converters/PromotionConverter");
Object.defineProperty(exports, "PromotionConverter", { enumerable: true, get: function () { return PromotionConverter_1.PromotionConverter; } });
var ResourceConverter_1 = require("./Converters/ResourceConverter");
Object.defineProperty(exports, "fetchAndCacheAttachmentData", { enumerable: true, get: function () { return ResourceConverter_1.fetchAndCacheAttachmentData; } });
Object.defineProperty(exports, "generateResourceUrl", { enumerable: true, get: function () { return ResourceConverter_1.generateResourceUrl; } });
Object.defineProperty(exports, "isSearchTextAllowed", { enumerable: true, get: function () { return ResourceConverter_1.isSearchTextAllowed; } });
Object.defineProperty(exports, "ResourceConverter", { enumerable: true, get: function () { return ResourceConverter_1.ResourceConverter; } });
var SavedSearchConverter_1 = require("./Converters/SavedSearchConverter");
Object.defineProperty(exports, "SavedSearchConverter", { enumerable: true, get: function () { return SavedSearchConverter_1.SavedSearchConverter; } });
var ShortcutConverter_1 = require("./Converters/ShortcutConverter");
Object.defineProperty(exports, "ShortcutConverter", { enumerable: true, get: function () { return ShortcutConverter_1.ShortcutConverter; } });
var TagConverter_1 = require("./Converters/TagConverter");
Object.defineProperty(exports, "TagConverter", { enumerable: true, get: function () { return TagConverter_1.TagConverter; } });
var ThreadConverter_1 = require("./Converters/ThreadConverter");
Object.defineProperty(exports, "ThreadConverter", { enumerable: true, get: function () { return ThreadConverter_1.ThreadConverter; } });
var UserConverter_1 = require("./Converters/UserConverter");
Object.defineProperty(exports, "convertUserFromService", { enumerable: true, get: function () { return UserConverter_1.convertUserFromService; } });
Object.defineProperty(exports, "UserConverter", { enumerable: true, get: function () { return UserConverter_1.UserConverter; } });
var WorkspaceConverter_1 = require("./Converters/WorkspaceConverter");
Object.defineProperty(exports, "convertPinnedContentFromService", { enumerable: true, get: function () { return WorkspaceConverter_1.convertPinnedContentFromService; } });
Object.defineProperty(exports, "PINNED_CONTENTS_FIELD_NAME", { enumerable: true, get: function () { return WorkspaceConverter_1.PINNED_CONTENTS_FIELD_NAME; } });
Object.defineProperty(exports, "WorkspaceConverter", { enumerable: true, get: function () { return WorkspaceConverter_1.WorkspaceConverter; } });
Object.defineProperty(exports, "workspaceFromService", { enumerable: true, get: function () { return WorkspaceConverter_1.workspaceFromService; } });
__exportStar(require("./Helpers"), exports);
var MaestroHelper_1 = require("./MaestroHelper");
Object.defineProperty(exports, "toUserClientInfo", { enumerable: true, get: function () { return MaestroHelper_1.toUserClientInfo; } });
var Thrift_1 = require("./Thrift");
Object.defineProperty(exports, "AsyncCommunicationEngine", { enumerable: true, get: function () { return Thrift_1.AsyncCommunicationEngine; } });
Object.defineProperty(exports, "AsyncMaestroService", { enumerable: true, get: function () { return Thrift_1.AsyncMaestroService; } });
Object.defineProperty(exports, "AsyncMessageStore", { enumerable: true, get: function () { return Thrift_1.AsyncMessageStore; } });
Object.defineProperty(exports, "AsyncNoteStore", { enumerable: true, get: function () { return Thrift_1.AsyncNoteStore; } });
Object.defineProperty(exports, "AsyncUserStore", { enumerable: true, get: function () { return Thrift_1.AsyncUserStore; } });
Object.defineProperty(exports, "AsyncUtilityStore", { enumerable: true, get: function () { return Thrift_1.AsyncUtilityStore; } });
Object.defineProperty(exports, "ThriftComm", { enumerable: true, get: function () { return Thrift_1.ThriftComm; } });
var ThriftRemoteMutationExecutor_1 = require("./ThriftRemoteMutationExecutor");
Object.defineProperty(exports, "generateCustomID", { enumerable: true, get: function () { return ThriftRemoteMutationExecutor_1.generateCustomID; } });
Object.defineProperty(exports, "ThriftRemoteMutationExecutor", { enumerable: true, get: function () { return ThriftRemoteMutationExecutor_1.ThriftRemoteMutationExecutor; } });
var ThriftRpc_1 = require("./ThriftRpc");
Object.defineProperty(exports, "updateThriftBackoffManager", { enumerable: true, get: function () { return ThriftRpc_1.updateThriftBackoffManager; } });
var ThriftStagedBlobManager_1 = require("./ThriftStagedBlobManager");
Object.defineProperty(exports, "ThriftStagedBlobManager", { enumerable: true, get: function () { return ThriftStagedBlobManager_1.ThriftStagedBlobManager; } });
__exportStar(require("./Types"), exports);
__exportStar(require("./WorkspaceUIPreferences"), exports);
//# sourceMappingURL=index.js.map